// Generated by Xata Codegen 0.22.3. Please do not edit.
import { buildClient } from "@xata.io/client";
import { XATA_API_KEY } from "$env/static/private";
/** @typedef { import('./types').SchemaTables } SchemaTables */
/** @type { SchemaTables } */
const tables = [
  {
    name: "OpenWaterReservations",
    columns: [
      { name: "time", type: "string" },
      { name: "ow_type", type: "string" },
      { name: "num_students", type: "int" },
      { name: "max_depth", type: "int" },
      { name: "buoy", type: "string" },
      { name: "comments", type: "text" },
      { name: "status", type: "string" },
      { name: "user", type: "link", link: { table: "Users" } },
      {
        name: "date",
        type: "datetime",
        notNull: true,
        defaultValue: "2023-01-01T00:00:00Z",
      },
    ],
  },
  {
    name: "Users",
    columns: [
      { name: "fullname", type: "string" },
      { name: "facebook_id", type: "string", unique: true },
      { name: "account_status", type: "string" },
    ],
  },
];
/** @type { import('../../client/src').ClientConstructor<{}> } */
const DatabaseClient = buildClient();
const defaultOptions = {
  databaseURL:
    "https://Michael-Horgan-s-workspace-pmg7q5.us-west-2.xata.sh/db/superhome-scheduler",
    apiKey: XATA_API_KEY
};
/** @typedef { import('./types').DatabaseSchema } DatabaseSchema */
/** @extends DatabaseClient<DatabaseSchema> */
export class XataClient extends DatabaseClient {
  constructor(options) {
    super({ ...defaultOptions, ...options }, tables);
  }
}
let instance = undefined;
/** @type { () => XataClient } */
export const getXataClient = () => {
  if (instance) return instance;
  instance = new XataClient();
  return instance;
};
